/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.nolanlab.codex.upload;

import javax.swing.*;
import java.io.File;
import java.net.MalformedURLException;
import java.net.URL;

/**
 *
 * @author Nikolay Samusik
 */
public class ProcessingOptionsView extends javax.swing.JPanel {

    /**
     * Creates new form UploadOptionsView
     */
    public ProcessingOptionsView() {
        initComponents();
    }

    public ProcessingOptions getUploadOptions() throws MalformedURLException {
        return buildProcessingOptions();
    }

    private ProcessingOptions buildProcessingOptions() throws MalformedURLException {
        if (txtTempDir.getText().equals("...")) {
            System.out.println("Please specify the Temporary storage location in upload options and try again!");
            throw new IllegalStateException("Temp directory not set");
        }
        return new ProcessingOptions(
                new File(txtTempDir.getText()),
                chkTrueCrop.isSelected(),
                chkBlind.isSelected(),
                (Integer) spinThreads.getValue(),
                new URL(txtURL.getText()),
                txtUsrname.getText(),
                new String(txtPwd.getPassword()),
                rbBoth.isSelected(),
                rbExportTiff.isSelected(),
                rbImageSeq.isSelected()
        );
                
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jPanel3 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        spinThreads = new javax.swing.JSpinner();
        txtTempDir = new JTextField();
        jLabel26 = new javax.swing.JLabel();
        rbProcessing = new javax.swing.JRadioButton();
        rbBoth = new javax.swing.JRadioButton();
        rbExportTiff = new JRadioButton();
        rbImageSeq = new JRadioButton();
        chkBlind = new javax.swing.JCheckBox();
        chkTrueCrop = new javax.swing.JCheckBox();
        jLabel7 = new javax.swing.JLabel();
        txtURL = new JTextField();
        txtUsrname = new JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtPwd = new javax.swing.JPasswordField();

        setLayout(new java.awt.BorderLayout());

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Uploading Options"));

        jLabel11.setText("Number of Uploading Threads:");

        spinThreads.setModel(new javax.swing.SpinnerNumberModel(16, 1, 200, 1));

        txtTempDir.setText("...");
        txtTempDir.setEnabled(false);
        txtTempDir.setMaximumSize(new java.awt.Dimension(3000, 20));
        txtTempDir.setMinimumSize(new java.awt.Dimension(300, 20));
        txtTempDir.setPreferredSize(new java.awt.Dimension(3000, 20));
        txtTempDir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                txtTempDirMouseReleased(evt);
            }
        });

        txtTempDir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTempDirActionPerformed(evt);
            }
        });

        jLabel26.setText("Temporary storage location ");

        buttonGroup1.add(rbProcessing);
        rbProcessing.setSelected(true);
        rbProcessing.setText("Processing only");

        buttonGroup1.add(rbBoth);
        rbBoth.setText("Processing and upload");

        buttonGroup2.add(rbExportTiff);
        rbExportTiff.setSelected(true);
        rbExportTiff.setText("Export as Tiff");

        buttonGroup2.add(rbImageSeq);
        rbImageSeq.setText("Export as Image Sequence");


        chkBlind.setText("use Blind deconvolution (must have license)");

        chkTrueCrop.setText("use bleach-minimizing cropping (incompatible with CODEXweb)");
        chkTrueCrop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkTrueCropActionPerformed(evt);
            }
        });

        jLabel7.setText("URL");

        txtURL.setText("https://codex-web.azurewebsites.net/");
        txtURL.setInputVerifier(urlVerifier);
        txtURL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtURLActionPerformed(evt);
            }
        });

        txtUsrname.setText("Administrator@admin.admin");
        txtUsrname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUsrnameActionPerformed(evt);
            }
        });

        jLabel1.setText("Username");

        jLabel2.setText("Password");

        txtPwd.setText("P@ssw0rd.123");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel11)
                        .addComponent(jLabel26))
                    .addComponent(jLabel2)
                    .addComponent(rbProcessing)
                    .addComponent(rbExportTiff)
                    .addComponent(jLabel1)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtTempDir, javax.swing.GroupLayout.DEFAULT_SIZE, 815, Short.MAX_VALUE)
                    .addComponent(txtURL)
                    .addComponent(txtUsrname)
                    .addComponent(txtPwd)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(spinThreads, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(chkBlind)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(chkTrueCrop))
                            .addComponent(rbBoth)
                            .addComponent(rbImageSeq))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(1, 1, 1)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(chkBlind)
                        .addComponent(chkTrueCrop))
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel11)
                        .addComponent(spinThreads, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTempDir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel26))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtURL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtUsrname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(txtPwd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rbProcessing)
                            .addComponent(rbBoth))
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rbExportTiff)
                            .addComponent(rbImageSeq))
                        .addGap(0, 13, Short.MAX_VALUE))))
        );

        add(jPanel3, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void txtUsrnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUsrnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUsrnameActionPerformed



    public void load(ProcessingOptions opt) {
        chkBlind.setSelected(opt.isUseBlindDeconvolution());
        spinThreads.setValue(opt.getNumThreads());
        chkTrueCrop.setSelected(opt.isUseBleachMinimizingCrop());
        txtPwd.setText(opt.getPassword());
        txtUsrname.setText(opt.getUsername());
        txtTempDir.setText(opt.getTempDir().getPath());
        rbExportTiff.setSelected(opt.isExportTiff());
        rbImageSeq.setSelected(opt.isExportImgSeq());
    }

    private void txtURLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtURLActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtURLActionPerformed

    private void chkTrueCropActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkTrueCropActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chkTrueCropActionPerformed

    private void txtTempDirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTempDirActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTempDirActionPerformed

    private void txtTempDirMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtTempDirMouseReleased
        JFileChooser jfc = new JFileChooser();
        jfc.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);

        if (jfc.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            txtTempDir.setText(jfc.getSelectedFile().getAbsolutePath());
        }
    }//GEN-LAST:event_txtTempDirMouseReleased

    InputVerifier urlVerifier = new InputVerifier() {
        @Override
        public boolean verify(JComponent input) {
            JTextField tf = (JTextField) input;
            try {
                new URL(tf.getText());
                if (!tf.getText().startsWith("http")) {
                    JOptionPane.showMessageDialog(ProcessingOptionsView.this, "Protocol must be https");
                }
                return true;
            } catch (MalformedURLException e) {
                JOptionPane.showMessageDialog(ProcessingOptionsView.this, "Not a valid URL");
                return false;

            }
        }
    };

    public JRadioButton getRbProcessing() {
        return rbProcessing;
    }
    public void setRbProcessing(JRadioButton rbProcessing) {
        this.rbProcessing = rbProcessing;
    }

    public JRadioButton getRbBoth() {
        return rbBoth;
    }

    public void setRbBoth(JRadioButton rbBoth) {
        this.rbBoth = rbBoth;
    }

    public JRadioButton getRbExportTiff() {
        return rbExportTiff;
    }

    public void setRbExportTiff(JRadioButton rbExportTiff) {
        this.rbExportTiff = rbExportTiff;
    }

    public JRadioButton getRbImageSeq() {
        return rbImageSeq;
    }

    public void setRbImageSeq(JRadioButton rbImageSeq) {
        this.rbImageSeq = rbImageSeq;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JCheckBox chkBlind;
    private javax.swing.JCheckBox chkTrueCrop;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JRadioButton rbBoth;
    private javax.swing.JRadioButton rbProcessing;
    private JRadioButton rbExportTiff;
    private JRadioButton rbImageSeq;

    private javax.swing.JSpinner spinThreads;
    private javax.swing.JPasswordField txtPwd;

    public JTextField getTxtTempDir() {
        return txtTempDir;
    }

    public void setTxtTempDir(JTextField txtTempDir) {
        this.txtTempDir = txtTempDir;
    }

    private JTextField txtTempDir;
    private JTextField txtURL;
    private JTextField txtUsrname;
    // End of variables declaration//GEN-END:variables
}
